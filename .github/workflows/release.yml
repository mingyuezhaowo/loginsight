name: Release

on:
  workflow_dispatch:
  repository_dispatch:
      inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'true'

jobs:
  build_linux:
    runs-on: ubuntu-16.04

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo DEBIAN_FRONTEND=noninteractive apt-get update
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y libfcitx-qt5-dev fcitx-frontend-qt5
    - name: Update pip (Ubuntu-16.05)	
      run: |	
           pip3 install --upgrade pip
    - name: Install Qt
      uses: jurplel/install-qt-action@v2.10.0
      with:	
        aqtversion: '==0.9.5'	
        py7zrversion: '==0.10.1'

    - name: do build
      run: |
        cp /usr/lib/x86_64-linux-gnu/libFcitxQt5DBusAddons.so* $Qt5_Dir/lib/
        cp /usr/lib/x86_64-linux-gnu/libFcitxQt5WidgetsAddons.so* $Qt5_Dir/lib
        cp /usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so $Qt5_Dir/plugins/platforminputcontexts/
        cd src
        ./release_linux.sh
        
    - name: Upload firmware to cowtransfer
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
    

  build_windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install Qt
      uses: jurplel/install-qt-action@v2.10.0

    - name: do build
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
        cd src
        release_win.bat
    

